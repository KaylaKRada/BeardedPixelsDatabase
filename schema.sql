-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admin
(
    admin_id serial NOT NULL,
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at character varying(255) COLLATE pg_catalog."default" DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT admin_pkey PRIMARY KEY (admin_id),
    CONSTRAINT admin_email_key UNIQUE (email),
    CONSTRAINT admin_username_key UNIQUE (username)
);

GRANT ALL(username) ON public.admin TO bearded_tucker;

CREATE TABLE IF NOT EXISTS public.album_photos
(a
    album_id integer NOT NULL,
    photo_id integer NOT NULL,
    CONSTRAINT album_photos_pkey PRIMARY KEY (album_id, photo_id)
);

CREATE TABLE IF NOT EXISTS public.albums
(
    album_id bigserial NOT NULL,
    title character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    cover_photo_url character varying(255) COLLATE pg_catalog."default",
    created_at timestamp(6) without time zone,
    CONSTRAINT albums_pkey PRIMARY KEY (album_id)
);

GRANT ALL(title) ON public.albums TO bearded_tucker;

CREATE TABLE IF NOT EXISTS public.booking_clients
(
    booking_id integer NOT NULL,
    client_id integer NOT NULL,
    CONSTRAINT booking_clients_pkey PRIMARY KEY (booking_id, client_id)
);

CREATE TABLE IF NOT EXISTS public.bookings
(
    booking_id bigserial NOT NULL,
    client_id bigint,
    booking_date timestamp without time zone,
    session_date date,
    location character varying(255) COLLATE pg_catalog."default",
    session_type character varying(25) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT bookings_pkey PRIMARY KEY (booking_id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    client_id bigserial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    phone character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    admin_id integer,
    CONSTRAINT clients_pkey PRIMARY KEY (client_id)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_item_id serial NOT NULL,
    order_id integer,
    photo_id integer,
    quantity integer,
    price numeric(10, 2),
    subtotal numeric(10, 2) GENERATED ALWAYS AS (((quantity)::numeric * price)) STORED,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id serial NOT NULL,
    total_amount numeric(10, 2),
    client_id integer,
    order_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    status character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.photos
(
    photo_id bigserial NOT NULL,
    title character varying(255) COLLATE pg_catalog."default",
    uploaded_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    description character varying(255) COLLATE pg_catalog."default",
    price numeric(38, 2),
    CONSTRAINT photos_pkey PRIMARY KEY (photo_id)
);

ALTER TABLE IF EXISTS public.album_photos
    ADD CONSTRAINT album_photos_album_id_fkey FOREIGN KEY (album_id)
    REFERENCES public.albums (album_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.album_photos
    ADD CONSTRAINT album_photos_photo_id_fkey FOREIGN KEY (photo_id)
    REFERENCES public.photos (photo_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.booking_clients
    ADD CONSTRAINT booking_clients_booking_id_fkey FOREIGN KEY (booking_id)
    REFERENCES public.bookings (booking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.booking_clients
    ADD CONSTRAINT booking_clients_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (client_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.bookings
    ADD CONSTRAINT bookings_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (client_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.clients
    ADD CONSTRAINT clients_admin_id_fkey FOREIGN KEY (admin_id)
    REFERENCES public.admin (admin_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_photo_id_fkey FOREIGN KEY (photo_id)
    REFERENCES public.photos (photo_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_client_id_fkey FOREIGN KEY (client_id)
    REFERENCES public.clients (client_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
